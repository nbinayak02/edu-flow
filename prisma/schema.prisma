generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullname  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  school    School? //user can have zero school or one
}

model School {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  email     String
  contact   String
  iemis     String
  estd      Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique //school must be connected to one user
  sclass    Sclass[] //one to many relationship with class
  exam      Exam[]
}

model Sclass {
  id          Int           @id @default(autoincrement())
  name        String
  school      School        @relation(fields: [schoolId], references: [id])
  schoolId    Int
  createdAt   DateTime      @default(now())
  subject     Subject[]
  student     Student[]
  examDetails ExamDetails[]
}

model Subject {
  id          Int           @id @default(autoincrement())
  name        String
  credit_hour Float
  createdAt   DateTime      @default(now())
  sclass      Sclass        @relation(fields: [sclassId], references: [id])
  sclassId    Int
  examDetails ExamDetails[]
}

model Student {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  contact   String
  gurdian   String
  year      Int
  iemis     String
  createdAt DateTime @default(now())
  sclass    Sclass   @relation(fields: [sclassId], references: [id])
  sclassId  Int
}

model Exam {
  id          Int           @id @default(autoincrement())
  name        String
  year        Int
  createdAt   DateTime      @default(now())
  school      School        @relation(fields: [schoolId], references: [id])
  schoolId    Int
  examDetails ExamDetails[]
}

model ExamDetails {
  id          Int     @id @default(autoincrement())
  exam        Exam    @relation(fields: [examId], references: [id])
  sclass      Sclass  @relation(fields: [sclassId], references: [id])
  subject     Subject @relation(fields: [subjectId], references: [id])
  examId      Int
  sclassId    Int
  subjectId   Int     @unique
  thFullMarks Int
  thPassMarks Int
  prFullMarks Int
  prPassMarks Int
}
